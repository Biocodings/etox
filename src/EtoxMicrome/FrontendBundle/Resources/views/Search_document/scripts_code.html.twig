{% block javascripts_footer %}
    <script>
        $(".open-c").click(function(){
          $("#cytochrome-c").toggle(300);
        });

        $(".toggleSummaryInfo").click(function(e){
          e.preventDefault();
          $("#mouseoverSummary").toggle(300);
        });
        $(".toggleDownload").click(function(e){
          e.preventDefault();
          $("#downloadOptions").toggle(300);
        });
        $('a.tanimoto').click(function(e)
        {
            e.preventDefault();
        });


        $(".bigSearch").click(function() {
            //We setup the url to search for. We need field(hepatotoxicity, other), WhatToSearch(name, id, structure, canonical...), entityType (Compound, Cyp, Marker...etc) and entityName
            //Getting field:
            var field = ($('#searchby').find(":selected").text()).toLowerCase();


            if (field==""){
                alert("Please select what is the field of your search in the \"Search by\" select box");
                return false;
            }
            if(field=="select one"){
                field="hepatotoxicity";
            }
            var entityType=$('.tabs dd.active a').attr('name');
            //Getting whatToSearch and entityName depends on entityType:
            switch(entityType){
                case "keyword":
                    whatToSearch = $('input[name=keywordWhatToSearch]:checked').val();
                    if(whatToSearch==null){
                        alert("You have mark \"What are you searching?\" option");
                        return false;
                    }
                    entityName = $('#tags-keywords').val();
                    entityName = entityName.trim();
                    source=$('input[name=keywordSource]:checked').val();
                    if (whatToSearch=="withCytochromes" && source=="abstract"){
                        alert("You cannot look for Keywords inside Abstracts containing CYPs. Use All, Pubmed, Fulltext, NDA or EPAR instead");
                        return false;
                    }

                    if (whatToSearch=="withMarkers" && source=="abstract"){
                        alert("You cannot look for Keywords inside Abstracts containing Markers. Use All, Pubmed, Fulltext, NDA or EPAR instead");
                        return false;
                    }

                    if(source==""){
                        alert("You have to check a source to continue");
                        return false;
                    }
                    if (entityName==""){
                        alert("Please type the entity to search for");
                        return false;
                    }
                    else{
                        link="{{ path('search_interface_search') }}"+"keyword"+"/"+whatToSearch+"/"+source+"/"+entityName+"/";
                        $('.bigSearch').attr('href',link);
                    }
                    break;
                case "compound":
                case "compoundDict":
                    whatToSearch=$('input[name=compoundWhatToSearch]:checked').val();
                    if(whatToSearch==null){
                        alert("You have mark \"What are you searching?\" option");
                        return false;
                    }
                    entityName = $('#tags-compounds').val();
                    entityName = entityName.trim();
                    source=$('input[name=compoundSource]:checked').val();
                    if(entityName==""){
                        alert("You have to type a Compound name, id or structure to continue");
                        return false;
                    }
                    if(source==""){
                        alert("You have to check a source to continue");
                        return false;
                    }
                    if (whatToSearch=="withCytochromes" && source=="abstract"){
                        alert("You cannot look for compounds inside Abstracts containing CYPs. Use All, Pubmed, Fulltext, NDA or EPAR instead");
                        return false;
                    }

                    if (whatToSearch=="withMarkers" && source=="abstract"){
                        alert("You cannot look for compounds inside Abstracts containing Markers. Use All, Pubmed, Fulltext, NDA or EPAR instead");
                        return false;
                    }

                    if (whatToSearch=="compoundsTermsRelations" && source=="abstract"){
                        alert("You cannot look for compounds inside Abstracts containing terms relations. Use All, Pubmed, Fulltext, NDA or EPAR instead");
                        return false;
                    }

                    if(whatToSearch=="inChi"){
                        $('.bigSearch').attr('href',"{{ path('search_interface_inChi') }}"+"?"+entityName);
                        break;
                    }

                    link='{{ path('search_interface_search') }}'+field+'/'+whatToSearch+'/'+entityType+'/'+source+'/'+entityName+'/';
                    $('.bigSearch').attr('href',link);
                    break;
                case "cytochrome":
                    whatToSearch=$('input[name=cytochromeWhatToSearch]:checked').val();
                    if(whatToSearch==null){
                        alert("You have mark \"What are you searching?\" option");
                        return false;
                    }
                    entityName = $('#tags-cytochromes').val();
                    entityName = entityName.trim();
                    source=$('input[name=cytochromeSource]:checked').val();
                    if(entityName==""){
                        alert("You have to type a Cytochrome name, id or canonical to continue");
                        return false;
                    }
                    if(source==""){
                        alert("You have to check a source to continue");
                        return false;
                    }
                    $('.bigSearch').attr('href','{{ path('search_interface_search') }}'+field+'/'+whatToSearch+'/'+entityType+'/'+source+'/'+entityName+'/');
                    break;
                case "marker":
                    whatToSearch=$('input[name=markerWhatToSearch]:checked').val();
                    if(whatToSearch==null){
                        alert("You have mark \"What are you searching?\" option");
                        return false;
                    }
                    entityName = $('#tags-markers').val();
                    entityName = entityName.trim();
                    source=$('input[name=markerSource]:checked').val();
                    if(entityName==""){
                        alert("You have to type a Marker name, id or structure to continue");
                        return false;
                    }
                    if(source==""){
                        alert("You have to check a source to continue");
                        return false;
                    }
                    $('.bigSearch').attr('href','{{ path('search_interface_search') }}'+field+'/'+whatToSearch+'/'+entityType+'/'+source+'/'+entityName+'/');
                    break;
            }

            //Once we have all the parameters required for the search, we generate the route


        });

        $("#jumpToAbstracts").click(function(e) {
            e.preventDefault();
            $('#documentsResults').slideToggle();
            $('#abstractsResults').slideToggle();

        });
        $("#jumpToDocuments").click(function(e) {
            e.preventDefault();
            $('#abstractsResults').slideToggle();
            $('#documentsResults').slideToggle();
        });

        function curateEntity2Document(sfAction, entity2DocumentId, action){
            idTrigger=action+"-"+entity2DocumentId;
            $.ajax(
              {
                url: sfAction,
                dataType: "json",
                beforeSend: function()
                {
                    //$('#free-curation-'+entity2DocumentId).remove();
                    //newText=$("<span class='loading_data'> Loading data...</span>");
                    //$("#"+idTrigger).append(newText);
                },
                complete: function()
                {
                    //newText.remove();
                    //$("#"+idTrigger).append(newText);
                },
                success: function (data, status)
                {
                    //We genereate a string with the new curation html code to insert
                    newCurationHtml= data["htmlCuration"];
                    $("#free-curation-"+entity2DocumentId).html(newCurationHtml);


                },
                error: function (data, status, e)
                {
                    alert('Something happened loading requested data:.\n'+data.error);
                }
            }
            );
        }

        function curateEntity2Abstract(sfAction, entity2AbstractId, action){
            idTrigger=action+"-"+entity2AbstractId;
            $.ajax(
              {
                url: sfAction,
                dataType: "json",
                beforeSend: function()
                {
                    //$('#free-curation-'+entity2AbstractId).remove();
                    //newText=$("<span class='loading_data'> Loading data...</span>");
                    //$("#"+idTrigger).append(newText);
                },
                complete: function()
                {
                    //newText.remove();
                    //$("#"+idTrigger).append(newText);
                },
                success: function (data, status)
                {
                    //We genereate a string with the new curation html code to insert
                    newCurationHtml= data["htmlCuration"];
                    $("#free-curation-"+entity2AbstractId).html(newCurationHtml);


                },
                error: function (data, status, e)
                {
                    alert('Something happened loading requested data:.\n'+data.error);
                }
            }
            );
        }

        function curateCompound2Term2Document(sfAction, compound2Term2DocumentId, action){
            idTrigger=action+"-"+compound2Term2DocumentId;
            $.ajax(
              {
                url: sfAction,
                dataType: "json",
                beforeSend: function()
                {
                    //$('#free-curation-'+compound2Term2DocumentId).remove();
                    //newText=$("<span class='loading_data'> Loading data...</span>");
                    //$("#"+idTrigger).append(newText);
                },
                complete: function()
                {
                    //newText.remove();
                    //$("#"+idTrigger).append(newText);
                },
                success: function (data, status)
                {
                    //We genereate a string with the new curation html code to insert
                    newCurationHtml= data["htmlCuration"];
                    $("#free-curation-"+compound2Term2DocumentId).html(newCurationHtml);


                },
                error: function (data, status, e)
                {
                    alert('Something happened loading requested data:.\n'+data.error);
                }
            }
            );
        }

        function curateCompound2Cyp2Document(sfAction, compound2Cyp2DocumentId, action){
            idTrigger=action+"-"+compound2Cyp2DocumentId;
            $.ajax(
              {
                url: sfAction,
                dataType: "json",
                beforeSend: function()
                {
                    //$('#free-curation-'+compound2Cyp2DocumentId).remove();
                    //newText=$("<span class='loading_data'> Loading data...</span>");
                    //$("#"+idTrigger).append(newText);
                },
                complete: function()
                {
                    //newText.remove();
                    //$("#"+idTrigger).append(newText);
                },
                success: function (data, status)
                {
                    //We genereate a string with the new curation html code to insert
                    newCurationHtml= data["htmlCuration"];
                    $("#free-curation-"+compound2Cyp2DocumentId).html(newCurationHtml);


                },
                error: function (data, status, e)
                {
                    alert('Something happened loading requested data:.\n'+data.error);
                }
            }
            );
        }

        function curateCompound2Marker2Document(sfAction, compound2Marker2DocumentId, action){
            idTrigger=action+"-"+compound2Marker2DocumentId;
            $.ajax(
              {
                url: sfAction,
                dataType: "json",
                beforeSend: function()
                {
                    //$('#free-curation-'+compound2Marker2DocumentId).remove();
                    //newText=$("<span class='loading_data'> Loading data...</span>");
                    //$("#"+idTrigger).append(newText);
                },
                complete: function()
                {
                    //newText.remove();
                    //$("#"+idTrigger).append(newText);
                },
                success: function (data, status)
                {
                    //We genereate a string with the new curation html code to insert
                    newCurationHtml= data["htmlCuration"];
                    $("#free-curation-"+compound2Marker2DocumentId).html(newCurationHtml);


                },
                error: function (data, status, e)
                {
                    alert('Something happened loading requested data:.\n'+data.error);
                }
            }
            );
        }

        function getCompoundList(sfAction){
            idTrigger="compounds";
            $.ajax(
              {
                url: sfAction,
                dataType: "json",
                beforeSend: function()
                {
                    //$('#free-curation-'+entity2DocumentId).remove();
                    //newText=$("<span class='loading_data'> Loading data...</span>");
                    //$("#"+idTrigger).append(newText);
                },
                complete: function()
                {
                    //newText.remove();
                    //$("#"+idTrigger).append(newText);
                },
                success: function (data, status)
                {
                    //We genereate a string with the new curation html code to insert
                    newCompounds= data["htmlTableCompounds"];
                    $("#compounds").html(newCompounds);


                },
                error: function (data, status, e)
                {
                    alert('Something happened loading requested data:.\n'+data.error);
                }
            }
            );
        }

        function calculateTanimoto(sfAction)
        {
            idTrigger="tanimoto-result";
            $tanimotoCompound1=$("input[id$='tanimoto-compound-1']").val();
            $tanimotoCompound2=$("input[id$='tanimoto-compound-2']").val();
            if($tanimotoCompound1=='' | $tanimotoCompound2=='' | $tanimotoCompound1==$tanimotoCompound2){
                alert("In order to calculate the Tanimoto Coefficient you have to type two different compounds. Try again");
                return false;
            }
            sfAction="{{ path('calculate_tanimoto') }}";
             $.ajax(
                  {
                    url: sfAction,
                    data: ({compoundName1: $tanimotoCompound1, compoundName2: $tanimotoCompound2}),
                    dataType: "json",
                    beforeSend: function()
                    {
                        $('.calculating_tanimoto').remove();
                        $("#tanimoto-result").html("");
                        newText=$("<span class='calculating_tanimoto'> Calculating tanimoto coefficient...</span>");
                        $("#"+idTrigger).append(newText);
                    },
                    complete: function()
                    {
                        newText.remove();
                    },
                    success: function (data, status)
                    {
                        //Create a string with tanimoto coefficient
                        $("#tanimoto-result").html(data);
                    },
                    error: function (data, status, e)
                    {
                        alert('Something happened loading requested data:.\n'+data.error);
                    }
                }
            );
        }

    </script>
{% endblock %}