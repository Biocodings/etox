<?php

namespace EtoxMicrome\Entity2AbstractBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * Entity2AbstractRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class Entity2AbstractRepository extends EntityRepository
{
    public function getValToSearch($field)
    {
        switch ($field) {
            case "hepatotoxicity":
                $valToSearch="hepval";
                break;
            case "cardiotoxicity":
                $valToSearch="cardval";
                break;
            case "nephrotoxicity":
                $valToSearch="nephval";
                break;
            case "phospholipidosis":
                $valToSearch="phosval";
                break;
        }
        return $valToSearch;
    }

    public function getEntity2AbstractFromField($field, $typeOfEntity, $arrayEntityName)
    {
        return $this->getEntity2AbstractFromFieldDQL($field, $typeOfEntity, $arrayEntityName)->getResult();
    }

    public function getEntity2AbstractFromFieldDQL($field, $entityType, $arrayEntityName)
    {//("hepatotoxicity","CompoundDict",arrayEntityId)
        $message="inside getEntity2AbstractFromFieldDQL";
        $valToSearch=$this->getValToSearch($field);//"i.e hepval, embval... etc"
        $sql="SELECT e2a,a
            FROM EtoxMicromeEntity2AbstractBundle:Entity2Abstract e2a
            JOIN e2a.abstracts a
            WHERE e2a.name IN (:arrayEntityName)
            AND e2a.qualifier = :entityType
            AND a.$valToSearch is not NULL
            ORDER BY a.$valToSearch desc
            ";
        $query = $this->_em->createQuery($sql);
        $query->setParameter("arrayEntityName", $arrayEntityName);
        $query->setParameter('entityType', $entityType);
        return $query;

    }

    public function findEntity2AbstractFromAbstract($abstract)
    {
        //Function to search all the entities involved in a particular sentence in order to highlight them
        $abstractId=$abstract->getId();
        //ld($abstractId);

        $em = $this->getEntityManager();
        $consulta = $em->createQuery('
            SELECT e2a
            FROM EtoxMicromeEntity2AbstractBundle:Entity2Abstract e2a
            WHERE e2a.abstracts = :abstractId
        ');
        $consulta->setParameter('abstractId', $abstractId);
        return $consulta->execute();
    }
}
